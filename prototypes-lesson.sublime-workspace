{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"us",
				"usableweight"
			],
			[
				"db",
				"db_column"
			],
			[
				"Disp",
				"DispensingQuerySet"
			],
			[
				"Dispensin",
				"DispensingTimeManager"
			],
			[
				"MI",
				"MIGRATION_MODE"
			],
			[
				"dis",
				"dispensings"
			],
			[
				"Lab",
				"LabResultsAbstractModel"
			],
			[
				"LabRe",
				"LabResultsSubTableAbstractModel"
			],
			[
				"extra",
				"extra_serie"
			],
			[
				"grap",
				"graph_url"
			],
			[
				"inv",
				"inventorytypes"
			],
			[
				"inve",
				"inventorytype"
			],
			[
				"Bio",
				"BiotrackthcOrganizations"
			],
			[
				"Biotr",
				"BiotrackthcOrganizationsLabs"
			],
			[
				"org",
				"organization"
			],
			[
				"fre",
				"frequencies"
			],
			[
				"dat",
				"DateTimeField"
			],
			[
				"ren",
				"render_to_response"
			],
			[
				"BiotrackthcOr",
				"BiotrackthcOrganizationsLabsDetailGraphsView"
			],
			[
				"quer",
				"queryset_to_csv"
			],
			[
				"BiotrackthcOrg",
				"BiotrackthcOrganizations"
			],
			[
				"poten",
				"potency_xdata"
			],
			[
				"pot",
				"potency_ydata"
			],
			[
				"PRO",
				"PRODUCT_TYPES"
			],
			[
				"PRODU",
				"PRODUCT_TYPES_TUPLES"
			],
			[
				"BiotrackLab",
				"BiotrackthcLabresultsPotencyAnalysis"
			],
			[
				"BiotrackthcOrga",
				"BiotrackthcOrganizationsLabs"
			],
			[
				"fo",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"Stoe",
				"StoreFrontPurchaseProduct"
			],
			[
				"stor",
				"storefront_product"
			],
			[
				"Store",
				"StoreFrontProduct"
			],
			[
				"Prod",
				"ProductSerializer"
			],
			[
				"Gener",
				"GenericProductSerializer"
			],
			[
				"St",
				"StoreFrontProductViewSet"
			],
			[
				"au",
				"auto_now"
			],
			[
				"aut",
				"auto_now_add"
			],
			[
				"Sto",
				"StoreFrontProductManager"
			],
			[
				"Str",
				"StoreFrontManager"
			],
			[
				"sto",
				"storefront_product"
			],
			[
				"For",
				"ForeignKey"
			],
			[
				"Trans",
				"TransactionSerializer"
			],
			[
				"q",
				"quantity"
			],
			[
				"req",
				"request_dict"
			],
			[
				"re",
				"request"
			],
			[
				"new",
				"new_bid_data"
			],
			[
				"user",
				"UserSerializer"
			],
			[
				"request",
				"request_account"
			],
			[
				"extr",
				"extraction_medium"
			],
			[
				"Pre",
				"preroll"
			],
			[
				"consi",
				"Consistency"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"sellsAc",
				"sellsAccountReviewState"
			],
			[
				"gener",
				"generic_product"
			],
			[
				"genr",
				"generic_product_matches"
			],
			[
				"cur",
				"cursor"
			],
			[
				"sell",
				"seller_acct_name"
			],
			[
				"buyer",
				"buyer_acct_name"
			],
			[
				"trans",
				"transaction_kwargs"
			],
			[
				"create",
				"create_transaction_requests"
			],
			[
				"tra",
				"transactions"
			],
			[
				"Revi",
				"ReviewViewSet"
			],
			[
				"Re",
				"ReviewManager"
			],
			[
				"Tran",
				"TransactionManager"
			],
			[
				"og",
				"og_request_type"
			],
			[
				"sell_re",
				"sell_request_dict"
			],
			[
				"con",
				"console"
			],
			[
				"filters",
				"filters_url_list"
			],
			[
				"search",
				"search_param"
			],
			[
				"se",
				"search"
			],
			[
				"font",
				"font-weight"
			],
			[
				"max-",
				"max-width"
			],
			[
				"over",
				"overflow-x"
			],
			[
				"bor",
				"border"
			],
			[
				"max",
				"max-height"
			],
			[
				"account",
				"accountsState"
			],
			[
				"inde",
				"indexState"
			],
			[
				"back",
				"background-color"
			],
			[
				"bac",
				"background-color"
			],
			[
				"pur",
				"purchasesDetailState"
			],
			[
				"p",
				"purchasesDetailState"
			],
			[
				"margi",
				"margin-right"
			],
			[
				"pos",
				"position"
			],
			[
				"bacn",
				"background-color"
			],
			[
				"get",
				"getRequestType"
			],
			[
				"thre",
				"thread_user2"
			],
			[
				"mess",
				"messages"
			],
			[
				"me",
				"messageId"
			],
			[
				"to",
				"to_user_id"
			],
			[
				"Mess",
				"MessageViewSet"
			],
			[
				"P",
				"ProductType"
			],
			[
				"Pr",
				"ProductType"
			],
			[
				"STAT",
				"STATIC_URL"
			],
			[
				"reque",
				"requestControllers"
			],
			[
				"Loc",
				"LocationAdmin"
			],
			[
				"wait",
				"wait_time"
			],
			[
				"cre",
				"create_limited_products"
			],
			[
				"acc",
				"account_legal_name"
			],
			[
				"acct",
				"acct_type"
			],
			[
				"TEMP",
				"TEMP_MSG_PART_2"
			],
			[
				"TEMP_M",
				"TEMP_MSG_PART_1"
			],
			[
				"msg",
				"msg_context"
			],
			[
				"state_medical_se",
				"state_medical_message"
			],
			[
				"stat",
				"state_medical_message"
			],
			[
				"html_",
				"html_message_list"
			],
			[
				"state",
				"state_sell_request	forflow"
			],
			[
				"all",
				"all_purchase	statement"
			],
			[
				"ccx",
				"ccx_requests	import"
			],
			[
				"acco",
				"accountInit"
			],
			[
				"state-warn",
				"state-warning-text"
			],
			[
				"panel-head",
				"panel-heading-link-color"
			],
			[
				"pa",
				"password2"
			],
			[
				"val",
				"validators"
			],
			[
				"User",
				"UserListView	class"
			],
			[
				"prod",
				"product_type"
			],
			[
				"gen",
				"generic_bulk"
			],
			[
				"fon",
				"font-style"
			],
			[
				"paddi",
				"padding-right"
			],
			[
				"SellRe",
				"SellRequest	import"
			],
			[
				"pro",
				"productApp"
			],
			[
				"getGe",
				"getGenericProductUrl"
			],
			[
				"product",
				"product_url"
			],
			[
				"Pur",
				"PurchaseRequestViewSet	class"
			],
			[
				"Pu",
				"PurchaseRequestLimitedSerializer	import"
			],
			[
				"nu-na",
				"nu-nav-2"
			],
			[
				"mar",
				"margin-right"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"ver",
				"verified_acct_owner"
			],
			[
				"Sell",
				"SellRequestFormView	class"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"err",
				"SublimeLinter: Show Error List"
			],
			[
				"er",
				"SublimeLinter: Show Error List"
			],
			[
				"ERR",
				"SublimeLinter: Show Error List"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"package ina",
				"Package Control: Install Package"
			]
		],
		"width": 513.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/migrations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/base.html",
		"/Users/goldhand/projects/biotrack-python/learning_threading.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/migrations/0004_perform_surgery.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/views.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/time_tools.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/migrations/0002_load_data.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/migrations/0002_load_data.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/migrations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/migrations/WIP_0004_perform_surgery.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/list.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/pages/about.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/pages/home.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/pages/terroir.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/managers.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/detail_graphs.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/docs/install.rst",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/static/images/all_testing_labs_thca.png",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/views.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/settings/migrate.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/settings/dump.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/models/load_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/models/dump_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/models/dump_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/models/load_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/models/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/migrations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/migrations/0002_load_data.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/labs/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/settings/load.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/models/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/urls.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/data_migrator.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/lab_code_reference.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/management/commands/perform_surgery.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/README.rst",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/load_migrations/organizations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/models/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/_models/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/migrations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/load_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/dump_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/load_migrations/organizations/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/migrations/dump_models_migration.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/migrations/load_models_migration.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/all_models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/contrib/sites/migrations/0002_set_site_domain_and_name.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/product_type_reference.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/_inspectdb_result.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/lcb_tables/fixtures/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/manage.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/favourites/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/favourites/urls.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/favourites/views.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/graph.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/favourites/_save_graph.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/favourites/list.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/favourites/managers.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/favourites/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/views.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/urls.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/managers.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/dispensings/graph.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/dispensings/list.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/dispensings/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/strains/models.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_potency.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/urls.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_foreign.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_moisture.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_solvent.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_micro.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/strains/migrations/0001_initial.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/strains/managers.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/strains/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/strains/graph_display.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/strain_choices.json",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_orgs/list.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/urls.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/csv_utils.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/settings/production.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/all_admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/sitemaps.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/views.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/lab_results_choices.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/detail.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/csv_utils.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/requirements/base.txt",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/fixtures/dump_orgs_5-12.json",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/migrations/__init__.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/organizations/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/time.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/lab_utils.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/labs/admin.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/config/settings/local.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrackthc/templates/biotrack_labs/_lab_table_header.html",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/biotrack_dump/migrations/0003_auto_20150510_2234.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/get_sample.py",
		"/Users/goldhand/projects/biotrack-python/biotrackthc/utils/models.py",
		"/Users/goldhand/projects/glueboss/app/views/about.html",
		"/Users/goldhand/projects/glueboss/app/scripts/controllers/main.js",
		"/Users/goldhand/projects/glueboss/app/views/main.html",
		"/Users/goldhand/projects/glueboss/app/scripts/filters/multikeywordfilter.js",
		"/Users/goldhand/projects/glueboss/app/index.html",
		"/Users/goldhand/projects/glueboss/resources/vendor-colors.json",
		"/Users/goldhand/projects/glueboss/update_json.py",
		"/Users/goldhand/projects/glueboss/resources/vendor-color-id.json",
		"/Users/goldhand/projects/glueboss/resources/vendor-color-id.csv",
		"/Users/goldhand/projects/glueboss/app/json/vendor-colors.json",
		"/Users/goldhand/projects/glueboss/web.js",
		"/Users/goldhand/projects/glueboss/Gruntfile.js",
		"/Users/goldhand/projects/glueboss/package.json",
		"/Users/goldhand/projects/ccx-angular/app/views/auctions/ask_list.html",
		"/Users/goldhand/projects/ccx-angular/app/views/storefronts/list.html",
		"/Users/goldhand/projects/ccx-angular/app/views/auctions/ask_filter.html",
		"/Users/goldhand/projects/ccx-angular/app/views/includes/ask_title.html",
		"/Users/goldhand/projects/ccx-angular/app/views/auctions/ask_detail.html",
		"/Users/goldhand/projects/ccx-angular/app/scripts/controllers/base.js",
		"/Users/goldhand/projects/ccx-angular/app/scripts/controllers/auth_base.js",
		"/Users/goldhand/projects/ccx-angular/app/views/auth_base.html",
		"/Users/goldhand/projects/ccx-angular/app/views/accounts/list.html",
		"/Users/goldhand/projects/ccx-angular/app/views/includes/_search_toggle_medical.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"isnull=False",
			"sample_re",
			"ils.tim",
			"utils.tim",
			"self",
			"April",
			"last_post",
			"model_obj.objects.using('dump').all()",
			"430",
			"super(PotencyQuerySet, self)",
			"h2",
			"span",
			"subscribe-modal",
			"objects",
			"p",
			"<p",
			"p",
			"s.sample_relation.strain_name",
			"014",
			"0010",
			"biotrackthclabresultsforeinmatter",
			"orienMat",
			"orienMatt",
			"Foreign",
			"BiotrackthcLabresultsForienMatter",
			"ps.get_model(",
			", app_name)",
			"pps.get_model(",
			", app_name",
			"move_data(",
			"_Model",
			"LabresultsSamples",
			"Samples",
			"LabresultsSamples",
			"LabresultsSample",
			"ta(app_na",
			"\")",
			"org_values",
			"['total_samples_count'] = SAMPLES_",
			"SAMPLES_COUNT",
			"app_name",
			"SETTING_",
			"DJANGO_SETTINGS_MODULE",
			"config.settings.",
			"    class Meta:\n        managed = False",
			"                'managed': False,\n            },",
			"\n    class Meta:\n        managed = False",
			"ntext['total_samples_count'] = SAMPLES_COUNT",
			"context['total_samples_count'] = SAMPLES_COUNT",
			"SAMPLES_COUNT",
			"samples_count",
			"SAMPLES_COUNT",
			"samples_count",
			"SAMPLES_COUNT",
			"samples_count",
			"SAMPLES_COUNT",
			"samples_count",
			"SAMPLES_COUNT",
			"id = models.TextField()",
			"id = models.BigIntegerField()",
			", #",
			" process",
			"pp",
			"r",
			"lab",
			"APPS_DIR",
			"APPS_DIR ",
			"about",
			"graph_link",
			"link_to_graph",
			"url",
			"user",
			"ame|safe",
			"=\"nofollow\"",
			"\"nofollow\">",
			"biotra",
			"BioTrack THC",
			"biotrack",
			"get_sample_data_fields",
			"rgname }}",
			".orgname }}",
			"models.Model",
			"LabResultsSubTableAbstractModel",
			"south",
			"target=\"_blank\" ",
			"focus",
			"{% if org %} {{ org.orgname }}{% endif %}",
			" lab",
			"lab",
			"{% if strain %} {{ strain.name }}{% endif %}",
			"inventorytype",
			"ame='",
			"  '",
			"mple.lab.orgna",
			"lter(name=export_table_name)",
			"le_name)",
			"'Organization',",
			"'Product'",
			"product_name",
			"600\", width=\"1000\"",
			"serie_date",
			"[name]",
			"THC",
			"chart",
			"y=serie_da",
			"x_serie_data",
			"inventorytype",
			"chart",
			"org",
			"graph",
			"THCA",
			"'THCA'",
			"True",
			"a=extra_serie)",
			"ame='",
			"rytype,)",
			"strain=strain, lab=lab, org=org)",
			"strain=strain, lab=lab, org=org",
			"range(int(MIN_POTENCY_VALUE+1), (MAX_POTENCY_VALUE/2)+1)",
			"page-title",
			"POTENCY_VALUE+1",
			"MAX_POTENCY_VALUE",
			"-- ",
			"lab",
			"inventorytype",
			"lab",
			" name=\"",
			" name=\"f"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\n        ",
			"        context['chart_html'] = all_charts[chart_type].buildhtml()\n        context['chart_jschart'] = all_charts[chart_type].buildjschart()\n        context['chart_htmlheader'] = all_charts[chart_type].buildhtmlheader()\n        context['chart_content'] = all_charts[chart_type].buildcontent()\n        context['chart_container'] = all_charts[chart_type].buildcontainer()",
			"<li>{{ accountProfile.ask_count }} auction{{ accountProfile.ask_count|pluralize }},\n                    <li>{{ accountProfile.product_account_item_count }} product{{ accountProfile.product_account_item_count|pluralize }},\n                    <li>{{ accoun",
			" = ",
			" if kwargs.get",
			"angular",
			"Anyone",
			"$scope",
			" = ",
			"= ",
			"=",
			">"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.261402936619,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 25.0
	},
	"output.jslint_result_view":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ask_lis",
				"app/scripts/controllers/auctions/ask_list.js"
			],
			[
				"err",
				"ccx/app_base/static/app/lib/angular/errors.json"
			],
			[
				"smarty-con",
				"bower_components/angular-smarty/demo/smarty-config.js"
			],
			[
				"smarty.js",
				"bower_components/angular-smarty/demo/smarty.js"
			],
			[
				"demo/sm",
				"bower_components/angular-smarty/demo/smarty.js"
			],
			[
				"smarty.cs",
				"bower_components/angular-smarty/demo/smarty.css"
			],
			[
				"smarty",
				"bower_components/angular-smarty/src/smarty.js"
			],
			[
				"bower_components/angular-smar",
				"bower_components/angular-smarty/src/smarty-config.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/goldhand/projects/yourlabs/yourlabs.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 174.0,
	"status_bar_visible": true
}
